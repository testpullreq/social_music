-- MySQL Script generated by MySQL Workbench
-- 11/15/16 19:25:49
-- Model: New Model    Version: 1.0
-- MySQL Workbench Forward Engineering

SET @OLD_UNIQUE_CHECKS=@@UNIQUE_CHECKS, UNIQUE_CHECKS=0;
SET @OLD_FOREIGN_KEY_CHECKS=@@FOREIGN_KEY_CHECKS, FOREIGN_KEY_CHECKS=0;
SET @OLD_SQL_MODE=@@SQL_MODE, SQL_MODE='TRADITIONAL,ALLOW_INVALID_DATES';

-- -----------------------------------------------------
-- Schema law-assistant
-- -----------------------------------------------------

-- -----------------------------------------------------
-- Schema law-assistant
-- -----------------------------------------------------
CREATE SCHEMA IF NOT EXISTS `social_music` ;
USE `social_music` ;

-- -----------------------------------------------------
-- Table `law-assistant`.`role`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `ROLE` (
  `id` INT NOT NULL AUTO_INCREMENT COMMENT '',
  `name` VARCHAR(45) NOT NULL COMMENT '',
  PRIMARY KEY (`id`)  COMMENT '',
  UNIQUE INDEX `id_UNIQUE` (`id` ASC)  COMMENT '',
  UNIQUE INDEX `name_UNIQUE` (`name` ASC)  COMMENT '')
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `law-assistant`.`users`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `USERS` (
  `id` INT NOT NULL AUTO_INCREMENT COMMENT '',
  `name_surname` VARCHAR(150) NULL COMMENT '',
  `nickname` VARCHAR(150) NULL COMMENT '',
  `email` VARCHAR(45) NOT NULL COMMENT '',
  `password` VARCHAR(45) NOT NULL COMMENT '',
  `role_id` INT NOT NULL COMMENT '',
  PRIMARY KEY (`id`)  COMMENT '',
  UNIQUE INDEX `email_UNIQUE` (`email` ASC)  COMMENT '',
  INDEX `fk_user_ro_role_idx` (`role_id` ASC)  COMMENT '',
  CONSTRAINT `fk_user_ro_role`
    FOREIGN KEY (`role_id`)
    REFERENCES `ROLE` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `law-assistant`.`permissions`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `PERMISSIONS` (
  `id` INT NOT NULL AUTO_INCREMENT COMMENT '',
  `name` VARCHAR(45) NOT NULL COMMENT '',
  PRIMARY KEY (`id`)  COMMENT '',
  UNIQUE INDEX `name_UNIQUE` (`name` ASC)  COMMENT '')
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `law-assistant`.`role_to_permission`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `ROLE_TO_PERMISSION` (
  `id` INT NOT NULL AUTO_INCREMENT COMMENT '',
  `role_id` INT NOT NULL COMMENT '',
  `permission_id` INT NOT NULL COMMENT '',
  PRIMARY KEY (`id`)  COMMENT '',
  INDEX `fk_role_to_permission_idx` (`role_id` ASC)  COMMENT '',
  INDEX `fk_permission_to_role_idx` (`permission_id` ASC)  COMMENT '',
  CONSTRAINT `fk_role_to_permission`
    FOREIGN KEY (`role_id`)
    REFERENCES `ROLE` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_permission_to_role`
    FOREIGN KEY (`permission_id`)
    REFERENCES `PERMISSIONS` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


insert into `ROLE` (`name`) values ('user');
insert into `ROLE` (`name`) values ('admin');

INSERT INTO `PERMISSIONS` (`name`) VALUES ('ROLE_USER');
INSERT INTO `PERMISSIONS` (`name`) VALUES ('ROLE_ADMIN');

insert into `ROLE_TO_PERMISSION` (`role_id`, `permission_id`) values ('1', '1');
insert into `ROLE_TO_PERMISSION` (`role_id`, `permission_id`) values ('2', '1');
insert into `ROLE_TO_PERMISSION` (`role_id`, `permission_id`) values ('2', '2');

insert into `USERS` (`email`, `password`, `role_id`) VALUES ('admin@social_music.com', MD5('admin'), 2);

SET SQL_MODE=@OLD_SQL_MODE;
SET FOREIGN_KEY_CHECKS=@OLD_FOREIGN_KEY_CHECKS;
SET UNIQUE_CHECKS=@OLD_UNIQUE_CHECKS;
